=head0 *序文

Perlは今年N<訳注: 原著が出版された2010年。>後半には23歳になります。
この言語は、シェルスクリプティングやCプログラミングのようなシステム管理者向けの簡素な道具（Perl 1）から、強力で・汎用的な・豊かな遺産を備えた言語（Perl 5）に変貌し、今や一貫性のある・整然とした・プログラミング全般を見直した、さらに25年間続くことを意図する言語（Perl 6）にまで成長しました。

とはいえ、世界中にある多くのPerl 5プログラムは、この言語の長所のごくわずかしか活用していません。
あなたはPerl 5によるプログラムを、まるでPerl 4である（またはPerl 3・2・1である）かのように書くこともI<できます>が、世界中のPerl 5コミュニティーを感心させる全ての長所を活用するべくして書かれたプログラムは、新しく・洗練されたものであり、他の選択肢よりも短く・高速で・より強力で・保守しやすいということに気付くでしょう。

本書I<モダンPerl>は、熟練した、能力のあるPerl 5プログラマーがどのように仕事をしているかを、簡潔に説明したものです。
彼らは、言語の慣用句（イディオム）を用いています。
彼らはCPANを駆使しています。
彼らははっきりとPerl的であり、良識と腕前を示し、Perlを十分に理解しています。

あなたも、それを学ぶことができます。

=head1 モダンPerlの稼働

=begin sidebar

CPANからModern::Perlモジュールを入手できます。
これをインストールするか、あるいはプログラム例の記述を以下のように置き換えてください。

=begin programlisting

    use 5.010;
    use strict;
    use warnings;

=end programlisting

X<C<feature>>

全てのプログラム例にこれらの行を備えることで、Perlは疑わしい構造や誤字について警告を発し、また、C<feature>プラグマ（L<プラグマ|pragmas>の章も参照してください）を介してPerl 5.10の新機能を有効にします。
さしあたっては、これらの行は常に存在するものN<訳注: いわゆる「おまじない」のことです。>として想定してください。
あなたはこれらの内容をすぐに理解することでしょう。

=end sidebar

特段の言及がない限り、コードスニペットは常に以下のようなプログラムの基本的な骨組みがあると見なします。

=begin programlisting

    #!/usr/bin/perl

    use Modern::Perl;

    # ここからプログラム例
    ...

=end programlisting

他のコードスニペットでは、テスト関数（L<テスト|testing>の章も参照してください）、たとえばC<ok()>やC<like()>やC<is()>を用いています。
そのプログラムの骨組みは以下の通りです。

=begin programlisting

    #!/usr/bin/perl

    use Modern::Perl;
    B<use Test::More;>

    # ここからプログラム例
    ...
    done_testing();

=end programlisting

本書の例はPerl 5.10.0、またはそれ以降（理想としては最低でもPerl 5.10.1）のバージョンで最適に動きます。
例の大部分は、わずかな修正を加えるだけでPerl 5の古いバージョンでも動くでしょうが、Perl 5.10.0より古いバージョンを使うと、より面倒なことになるでしょう。
また、本書はPerl 5.12から備えられた機能についても説明します（が、それらを使うことはI<必須>ではありません）。
あなたはN<訳注: あなたがシステム管理者でなくても。>たいていの場合はPerlの新しいバージョンを自分自身でインストールすることができます。
Windowsユーザーであれば、U<http://www.strawberryperl.com/>から、Strawberry Perlをダウンロードしてください。
他の、Perl 5（とC言語のコンパイラーとその他の開発ツール群）が既にインストールされているオペレーティングシステムのユーザーであれば、C<App::perlbrew>N<インストール方法については、U<http://search.cpan.org/perldoc?App::perlbrew>)をご覧ください。>というCPANモジュールのインストールから始めてください。

C<perlbrew>はPerl 5の複数のバージョンをインストールおよび管理することができます。
デフォルトでは、それらはあなたの所有するホームディレクトリーにインストールされます。
つまり、システムに既にインストールされているPerlに影響を及ぼすことなくPerl 5の複数のバージョンをインストールできるだけでなく、何らかのモジュールをそれらのディレクトリーへインストールしたい場合であっても、あなたのシステムの管理者に対して明示的なパーミッションを与えてくれるようなお願いをせずに済むのです。

=head1 Perl 5とPerl 6

あなたはPerl 5とPerl 6のどちらを学習するべきでしょうか？
これらの言語は哲学・文法・ライブラリー・コミュニティーを共有していて、それぞれ様々な得意分野があります。
次のような場合は、Perl 5を学んでください。

=over 4

=item * 保守すべき既存のPerl 5コードがある

=item * CPANモジュールを活用する必要がある

=item * 開発戦略によって厳格な安定性が求められている

=back

次のような場合は、Perl 6を学んでください。

=over 4

=item * 頻繁なアップグレードを管理することが心地よい

=item * 新たな文法や機能を実験する余裕がある

=item * Perl 6でのみ使える新機能が必要である

=item * Perl 6の開発に貢献できる（パッチか、バグの報告か、文書化か、資金提供か、その他のリソースによって）

=back

一般的には、コア言語に対するPerl 5の開発は保守的です。
良くも悪くも、変化はゆっくりと現れます。
Perl 6はより実験的です。古いコードの動作を維持することよりも、最良の設計を見出すことをより重視するように検討されています。
幸いにして、あなたは両方の言語を学び、使うことができます（さらに、一層の向上のために（※再考: ガチガチだ……）それらを同時に運用することもできます）。

本書はPerl 5について論じています。
Perl 6についてより学びたい場合には、U<http://perl6.org/>を参照し、Rakudo(U<http://www.rakudo.org/>)を試し、Onyx Neon Press社も出版しているI<Using Perl 6>という書籍をひもといてください。

=head1 謝辞

とても多くの方々の質問・批評・提案・助言・知識・励ましがなければ、本書は現在の状態にはなりませんでした。
特に、著者と編集者は以下に掲げる方々に感謝を捧げます。

John SJ Anderson, Peter Aronoff, Lee Aylward, Alex Balhatchet, Ævar Arnfjörð
Bjarmason, Matthias Bloch, John Bokma, Vasily Chekalkin, Dmitry Chestnykh, E.
Choroba, Paulo Custodio, Felipe, Shlomi Fish, Jeremiah Foster, Mark Fowler,
John Gabriele, Andrew Grangaard, Bruce Gray, Ask Bjørn Hansen, Tim Heaney,
Robert Hicks, Michael Hind, Mark Hindess, Yary Hluchan, Mike Huffman, Curtis
Jewell, Mohammed Arafat Kamaal, James E Keenan, Yuval Kogman, Jan Krynicky,
Jeff Lavallee, Moritz Lenz, Jean-Baptiste Mazon, Josh McAdams, Gareth
McCaughan, John McNamara, Shawn M Moore, Alex Muntada, Carl Mäsak, Chris
Niswander, Nelo Onyiah, Chas. Owens, ww from PerlMonks, Jess Robinson, Dave
Rolsky, Gabrielle Roth, Andrew Savige, Lorne Schachter, Dan Scott, Alexander
Scott-Johns, Phillip Smith, Christopher E. Stith, Mark A. Stratman, Bryan
Summersett, Audrey Tang, Scott Thomson, Ben Tilly, Sam Vilain, Larry Wall,
Colin Wetherbee, Frank Wiegand, Doug Wilson, Sawyer X, David Yingling, Marko
Zagozen, harleypig, hbm, そして sunnavy.

全ての誤りは、融通の利かない著者によるものですN<訳注：翻訳に関する全ての誤りは、未熟な訳者の責任です>。
